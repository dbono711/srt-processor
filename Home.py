import streamlit as st

from loggerfactory import LoggerFactory
from toolbox import Toolbox

st.set_page_config(page_title="SRT Processor", layout="wide")
st.title("SRT Processor")
st.subheader("Interactive application for exploring SRT session statistics")

st.session_state.toolbox = Toolbox()
st.session_state.logger = LoggerFactory.get_logger("app", log_level="WARNING")

overview, faq = st.tabs(["Overview", "FAQ"])
overview.write(
    """
    ```srt-processor``` is an interactive platform designed to serve as both 
    a learning environment and a troubleshooting tool for analyzing Secure 
    Reliable Transport (SRT) flows. This project enables users to delve deep 
    into the statistcs generated by SRT sessions, offering insight into SRT 
    communication.

    The platform is designed with flexibility in mind, allowing users to either 
    upload Packet Capture (PCAP/PCAPNG) files containing SRT session data or 
    initiate live SRT streams for real-time analysis. Through a combination of 
    open-source tools and custom processing libraries, SRT Processor provides a 
    comprehensive view of SRT statistics, offering invaluable insights for 
    engineers, developers, and anyone interested in exploring SRT.

    Click :point_left: on a page in the navigation menu to get started!
    """
)

with faq:
    with st.expander("What is SRT?"):
        st.write(
            """
            Secure Reliable Transport (SRT) is an open-source protocol developed 
            by Haivision in 2012, designed to optimize live video streaming over 
            unpredictable IP networks, particularly the public internet. Released 
            to the industry through the SRT Alliance in 2017, SRT has rapidly become 
            a critical tool for industries like broadcasting, OTT streaming, and 
            enterprise communications. Its core features include low-latency 
            transmission, robust error correction, and end-to-end encryption, making 
            it ideal for secure and reliable live video transport.
            
            SRT leverages Automatic Repeat reQuest (ARQ) and other techniques to 
            ensure high-quality video delivery even over unreliable networks. Its 
            focus on security through 128/256-bit AES encryption ensures that video 
            streams are protected from unauthorized access and tampering. These 
            attributes make SRT highly valuable for live broadcasts, remote production, 
            and cloud-based workflows.
            
            Within the DVB value chain, SRT plays a key role in both content contribution 
            and distribution, allowing broadcasters to move video from field locations 
            to broadcast centers or cloud platforms with reliability and low latency. 
            Its open-source nature and ability to integrate into IP-based workflows position 
            SRT as a flexible and cost-effective alternative to traditional video transmission 
            methods like satellite, and proprietary protocols such as RTMP and Zixi.
            
            SRTâ€™s rapid adoption by the industry, combined with its scalability and strong 
            performance in challenging network environments, has made it a crucial component 
            in the evolution of digital video broadcasting, particularly as the industry 
            shifts toward cloud-based and IP-driven infrastructures.
            """
        )
